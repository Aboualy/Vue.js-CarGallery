{"remainingRequest":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mahmoud/Downloads/ThesisProgect/vapp/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css","dependencies":[{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/src/components/HelloWorld.vue","mtime":1535307974293},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/css-loader/index.js","mtime":1530825907366},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/cache-loader/dist/cjs.js","mtime":1530825908017},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './Style/Form.css';\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <fieldset class=\"split left\">\n        <form>\n            <h5 class=\"head\"> Registration Form</h5>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label for=\"firstName\">First Name</label>\n                    <input id=\"firstName\" type=\"text\" class=\"form-control\" v-model=\"signupData.firstName\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"lastName\">Last Name</label>\n                    <input id=\"lastName\" type=\"text\" class=\"form-control\" v-model=\"signupData.lastName\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"mail\">Mail</label>\n                    <input id=\"mail\" type=\"text\" class=\"form-control\" v-model=\"signupData.mail\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input id=\"password\" type=\"password\" class=\"form-control\" v-model=\"signupData.password\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Store Data?</label>\n                    <input type=\"radio\" value=\"Yes\" v-model=\"signupData.storeData\"> Yes\n                    <input type=\"radio\" value=\"No\" v-model=\"signupData.storeData\"> No\n                </div>\n            </div>\n            <div class=\"row\">\n                <button class=\"btn btn-primary\" @click.prevent=\"signUp\">Submit</button>\n            </div>\n        </form>\n    </fieldset>\n\n</template>\n\n\n\n\n<script>\n  //If a module defines a default export: then you can import that default export by omitting the curly braces:\nexport default {\n  name: 'Form',\n    data () {\n        return {\n            signupData: {\n                firstName: '',\n                lastName: '',\n                mail: '',\n                password: '',\n                storeData: ''\n            }\n        }\n    },\n    computed: {\n        validation () {\n            return {\n                firstName: !!this.signupData.firstName.trim(),\n                lastName: !!this.signupData.firstName.trim(),\n                mail: !!this.signupData.mail.trim(),\n                password: !!this.signupData.password.trim(),\n                storeData: !!this.signupData.storeData.trim()\n            }\n        },\n        isValid () {\n            var validation = this.validation\n            return Object.keys(validation).every(function (key) {\n                return validation[key]\n            })\n        }\n    },\n    methods: {\n        signUp () {\n            if (this.isValid) {\n                this.$emit('submitted', this.signupData)\n            }\n        }\n    }\n  }\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    @import './Style/Form.css';\n</style>\n"]}]}