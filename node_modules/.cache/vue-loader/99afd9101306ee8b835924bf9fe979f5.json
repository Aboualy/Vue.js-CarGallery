{"remainingRequest":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mahmoud/Downloads/ThesisProgect/vapp/src/components/Form.vue?vue&type=style&index=0&id=1b5a9218&scoped=true&lang=css","dependencies":[{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/src/components/Form.vue","mtime":1535627157823},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/css-loader/index.js","mtime":1530825907366},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/cache-loader/dist/cjs.js","mtime":1530825908017},{"path":"/Users/mahmoud/Downloads/ThesisProgect/vapp/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './style/Form.css';\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA","file":"Form.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div>\n\n\n        <fieldset class = \"split left\">\n\n                            <form @submit.prevent=\"validateUser\">\n                                <md-card-header>\n                                    <div class=\"font\">Registration Form</div>\n                                </md-card-header>\n                                <md-card-content>\n                                    <md-field :class=\"getValidationClass('fullName')\">\n                                        <label for=\"full-name\" class=\"font\">Full Name</label>\n                                        <md-input name=\"full-name\" id=\"full-name\" autocomplete=\"given-name\" v-model=\"form.fullName\" :disabled=\"sending\" />\n                                        <span class=\"md-error\" v-if=\"!$v.form.fullName.required\">The full name is required</span>\n                                        <span class=\"md-error\" v-else-if=\"!$v.form.fullName.minlength\">Invalid full name</span>\n                                    </md-field>\n\n                                    <md-field :class=\"getValidationClass('carMake')\">\n                                        <label for=\"car-make\" class=\"font\">Car Make</label>\n                                        <md-input name=\"carMake\" id=\"car-make\" v-model=\"form.carMake\" :disabled=\"sending\" />\n                                        <span class=\"md-error\" v-if=\"!$v.form.carMake.required\">The car make is required</span>\n                                        <span class=\"md-error\" v-else-if=\"!$v.form.carMake.minlength\">Invalid car make </span>\n                                    </md-field>\n\n                                    <md-field :class=\"getValidationClass('carModel')\">\n                                        <label for=\"car-model\" class=\"font\">Car Model</label>\n                                        <md-input name=\"carModel\" id=\"car-model\" v-model=\"form.carModel\" :disabled=\"sending\" />\n                                        <span class=\"md-error\" v-if=\"!$v.form.carModel.required\">The car model is required</span>\n                                        <span class=\"md-error\" v-else-if=\"!$v.form.carModel.minlength\">Invalid car model </span>\n                                    </md-field>\n\n                                    <md-field :class=\"getValidationClass('extraDes')\">\n                                        <label for=\"car-des\" class=\"font\">Extra description</label>\n                                        <md-textarea name=\"extraDes\" id=\"car-des\" v-model=\"form.extraDes\" :disabled=\"sending\" />\n                                        <span class=\"md-error\" v-if=\"!$v.form.extraDes.required\">Extra description is required</span>\n                                        <span class=\"md-error\" v-else-if=\"!$v.form.extraDes.minlength\">Invalid extra description </span>\n                                    </md-field>\n\n                                </md-card-content>\n\n                                <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\n\n\n\n                                <md-input id=\"input\" :class=\"getValidationClass('photos')\" accept=\"image/*\" multiple type=\"file\" @change=\"onFileChange\" class=\"input\" :disabled=\"sending\"/>\n\n                                <v-btn outline small id=\"IButton\" onclick=\"document.getElementById('input').click()\"\n                                       :loading=\"loading3\"\n                                       :disabled=\"loading3\"\n                                       class=\"black--text\"\n                                       @click.native=\"loader = 'loading3'\">upload\n                                    <v-icon small right dark>cloud_upload</v-icon></v-btn>\n\n                                <br/>\n\n\n\n                                <v-btn outline small flat type=\"submit\" class=\"black--text\" color=\"black\" :disabled=\"sending\">\n                                    Sign up<v-icon small right dark>check_circle</v-icon>\n                                </v-btn>\n                                <md-snackbar :md-active.sync=\"userSaved\">The user {{ lastUser }} was saved with success!</md-snackbar>\n\n\n                            </form>\n\n    </fieldset>\n\n        <div class=\"split right \">\n\n               <md-bottom-bar md-theme=\"black\">\n                   <md-icon> camera</md-icon>\n               </md-bottom-bar>\n\n            <div style='overflow:auto; width:715px;height:375px;'>\n            <md-card v-for=\"u in form.photos\" v-bind:key=\"u.id\">\n                <md-card-media-cover>\n                    <md-card-media md-ratio=\"16:9\">\n                        <img :src=\"u.image\" alt=\"Skyscraper \">\n                    </md-card-media>\n\n                    <md-card-area >\n\n                        <md-card-actions>\n                            <div>\n                                <md-button small class=\"md-fab md-mini md-accent\">\n                                    <md-icon>edit</md-icon>\n                                </md-button>\n                                <md-button small class=\"md-fab md-mini md-accent\">\n                                    <md-icon>remove</md-icon>\n                                </md-button>\n                            </div>\n                            <md-card-expand-trigger>\n                                <md-button class=\"md-icon-button md-accent\">\n                                    <md-icon>keyboard_arrow_down</md-icon>\n                                </md-button>\n                            </md-card-expand-trigger>\n                        </md-card-actions>\n                        <md-card-expand-content>\n                            <md-card-content class=\"black--text \">\n                                voluptas eius illo quas, saepe voluptate pariatur in deleniti minus sint. Excepturi.\n                            </md-card-content>\n                        </md-card-expand-content>\n                    </md-card-area>\n                </md-card-media-cover>\n            </md-card>\n\n        </div>\n        </div>\n\n\n\n    </div>\n</template>\n\n\n\n<script>\n    import { validationMixin } from 'vuelidate'\n    import {\n        required,\n        minLength,\n\n    } from 'vuelidate/lib/validators'\n    export default {\n        name: \"Form\",\n        mixins: [validationMixin],\n        data: () => ({\n            form: {\n                id:1,\n                fullName: null,\n                carMake: null,\n                carModel: null,\n                extraDes: null,\n                photos:[],\n\n\n            },\n            errors: [],\n            userSaved: false,\n            sending: false,\n            lastUser: null\n        }),\n        validations: {\n            form: {\n                fullName: {\n                    required,\n                    minLength: minLength(5)\n                },\n                carMake: {\n                    required,\n                    minLength: minLength(5)\n                },\n                carModel: {\n                    required,\n                    minLength: minLength(5)\n                },\n                extraDes: {\n                    required,\n                    minLength: minLength(5)\n                },\n\n            }\n        },\n        methods: {\n            onFileChange(e) {\n\n                const files = e.target.files;\n                const len = files.length;\n                for (let i =0; i < len; i++){\n                    const file = URL.createObjectURL(files[i]);\n                    this.form.photos.push({id:i, image: file});\n                }\n            },\n\n            getValidationClass (fieldName) {\n                const field = this.$v.form[fieldName]\n\n                if (field) {\n                    return {\n                        'md-invalid': field.$invalid && field.$dirty\n                    }\n                }\n            },\n            clearForm () {\n                this.$v.$reset()\n                this.form.fullName = null\n                this.form.carMake=null\n                    this.form.carModel=null\n                    this.form.extraDes=null\n\n            },\n            saveUser () {\n                this.sending = true\n\n                // Instead of this timeout, here you can call your API\n                window.setTimeout(() => {\n                    this.lastUser = `${this.form.fullName}`\n                    this.userSaved = true\n                    this.sending = false\n                    this.clearForm()\n                }, 10)\n            },\n            validateUser () {\n                this.$v.$touch()\n\n                if (!this.$v.$invalid) {\n                    this.saveUser()\n                }\n            }\n        }\n    }\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    @import './style/Form.css';\n</style>\n"]}]}